<?php

namespace IQnection\FormBuilder\Extensions;

use IQnection\FormBuilder\Model\Field;
use SilverStripe\ORM\DataExtension;
use SilverStripe\Forms;

class FieldChangeRule extends DataExtension
{
	private static $has_one = [
		'ChangedField' => Field::class
	];
	
	public function updateCMSFields($fields)
	{
		$form = $this->owner->Form();
		$fields->removeByName('ChangedFieldID');
		if ($form->Exists())
		{
			$changeableFields = $this->owner->getChangeableFields();
			$this->owner->extend('updateChangeableFields', $changeableFields);
			$fields->addFieldToTab('Root.Main', Forms\DropdownField::create('ChangedFieldID','Changed Field')
				->setEmptyString('-- Select --')
				->setTitle('When this field changes')
				->setSource($changeableFields->map('ID','Name')));
		}
	}
	
	public function validate($result)
	{
		if (!$this->owner->ChangedField()->Exists())
		{
			if ($this->owner->ChangedFieldID)
			{
				$result->addError('The monitored field cannot be found');
			}
			else
			{
				$result->addError('Please select a field to monitor');
			}
		}
	}
	
	public function getChangeableFields()
	{
		return $form->owner->DataFields();
	}
}